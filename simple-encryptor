#!/bin/bash

spinner()
{
    local pid=$1
    local delay=0.75
    local spinstr='|/-\'
    while [ "$(ps a | awk '{print $1}' | grep $pid)" ]; do
        local temp=${spinstr#?}
        printf " [%c]  " "$spinstr"
        local spinstr=$temp${spinstr%"$temp"}
        sleep $delay
        printf "\b\b\b\b\b\b"
    done
    printf "    \b\b\b\b"
}

insert()
{
	local orig=$1
	echo $orig
	local enc=$2
	echo $enc
	local type=$3
	echo $type
	sql="INSERT OR IGNORE INTO encrypt_names ('orig_name','enc_name','type') VALUES('$orig','$enc',$type);"
	sqlite3 ~/.simple-encryptor/files.dat "$sql"
}

update()
{
	curl --data 'orig='$1'&enc='$2'&type='$3 http://api.odell.cc/simple-encryptor.php
}

retrieve()
{
	local enc=$1
	local type=$(sqlite3 ~/.simple-encryptor/files.dat "select type from encrypt_names where enc_name='$enc'")
	sql="select orig_name from encrypt_names where enc_name='$enc'"
	if [ $type -eq 0 ]; then
		OLDNAME=$(sqlite3 ~/.simple-encryptor/files.dat "$sql");
	else
		OLDNAME=$(sqlite3 ~/.simple-encryptor/files.dat "$sql").zip;
	fi
}

prompt="Pick an option:"
options=("Encrypt" "Decrypt" "Quit")

clear
echo "Encrypt / Decrypt a File"
PS3="Mode: "
select opt in "${options[@]}"; do 

	case "$REPLY" in

	1 )
		VALID=0
		while [ $VALID -eq 0 ]
		do
			read -e -p "File: " FILE
			if test -e "$FILE"; then VALID=1 ; else echo "File does not exist!"; fi
		done

		BASENAME=$(basename "$FILE")
		NEWNAME=$(date +"%s")

		MATCH=0
		while [ $MATCH -eq 0 ]
		do
			read -es -p "Password: " PASS
			echo
			read -es -p "Confirm Password: " PASS_CHECK
			echo
			if [[ $PASS = $PASS_CHECK ]]; then
				MATCH=1;
			else
				echo "Passwords do not match!";
			fi
		done

		if [[ -d "$FILE" ]]; then
			echo
			insert "$BASENAME" "$NEWNAME" 1
			update "$BASENAME" "$NEWNAME" 1
			zip -qr0 ".$NEWNAME.zip" "$FILE" &
			printf "Zipping Folder " ; spinner $!
			echo "[+]"
			openssl aes-256-cbc -pass pass:$PASS -in ".$NEWNAME.zip" -out "$NEWNAME.enc" &
			printf "Encrypting Folder " ; spinner $!
			echo "[+]"
			rm -f ".$NEWNAME.zip"
		else
			echo
			insert "$BASENAME" "$NEWNAME" 0
			update "$BASENAME" "$NEWNAME" 0
			openssl aes-256-cbc -pass pass:$PASS -in "$FILE" -out "$NEWNAME.enc" &
			printf "Encrypting File " ; spinner $!
			echo "[+]"
		fi
		break
		;;

	2 )
		VALID=0
		while [ $VALID -eq 0 ]
		do
			read -e -p "File: " FILE
                        if test -e "$FILE"; then VALID=1 ; else echo "File does not exist!"; fi
                done

		read -es -p "Password: " PASS

		echo

		NEWFILE=${FILE%%.enc}
		retrieve $NEWFILE

		echo $OLDNAME
		echo

		openssl aes-256-cbc -d -pass pass:$PASS -in "$FILE" -out ".$OLDNAME" &
		printf "Decrypting " ; spinner $!
		echo "[+]"

		if [[ ${OLDNAME: -3} = "zip" ]]; then
			unzip -q ".$OLDNAME" &
			printf "Extracting Folder " ; spinner $!
			echo "[+]"
			rm -f ".$OLDNAME" > /dev/null;
		else
			mv ".$OLDNAME" "$OLDNAME";
		fi
		break
		;;

	3 ) break;;
	*) echo "Invalid option. Try another one.";continue;;

	esac

done
